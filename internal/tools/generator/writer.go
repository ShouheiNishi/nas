package generator

import (
	"bytes"
	"fmt"
	"go/format"
	"os"
	"strings"
)

type outputFile struct {
	*bytes.Buffer
	name string
}

func NewOutputFile(name string, pkgName string, imports []string) *outputFile {
	o := outputFile{
		Buffer: new(bytes.Buffer),
		name:   name,
	}

	fmt.Fprintln(o, "// Code generated by generate.sh, DO NOT EDIT.")
	fmt.Fprintln(o, "")
	fmt.Fprintf(o, "package %s\n", pkgName)
	fmt.Fprintln(o, "")
	fmt.Fprintf(o, "import (\n\n%s\n)\n", strings.Join(imports, "\n"))
	fmt.Fprintln(o, "")

	return &o
}

func (o *outputFile) Close() {
	// Output to file
	if false {
		os.Stdout.Write(o.Bytes())
		return
	}
	out, err := format.Source(o.Bytes())
	if err != nil {
		fmt.Println(string(o.Bytes()))
		panic(err)
	}
	fWrite, err := os.Create(o.name)
	if err != nil {
		panic(err)
	}
	defer fWrite.Close()
	_, err = fWrite.Write(out)
	if err != nil {
		panic(err)
	}
}
